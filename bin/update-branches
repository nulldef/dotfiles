#! /usr/bin/env ruby

FILTERED_BRANCHES = /main|master|develop|dev/
MAIN_BRANCH = "develop"

def git_branches
  `git for-each-ref --format '%(refname:short)' refs/heads`.split.map(&:strip)
end

def fetch_branches
  list = ARGV.empty? ? git_branches : ARGV
  list.reject { |x| x =~ FILTERED_BRANCHES || x =~ /#{MAIN_BRANCH}/ }
end

def exec(command)
  puts command
  output = `#{command}`
  $?.exitstatus
end

branches = fetch_branches

if branches.empty?
  puts "No branches, exit"
  exit 0
end

puts "The following branches will be updated:"
puts branches
puts "Y/n ?"

answer = $stdin.gets.chomp.downcase

if answer != "y"
  puts "Exit"
  exit 1
end

exec "git checkout #{MAIN_BRANCH}"
exec "git pull"

branches.each do |branch|
  puts "- #{branch}"
  exec "git checkout #{branch}"
  status, output = exec "git merge #{MAIN_BRANCH}"

  exit 1 if status != 0

  exec "git push"

  puts "- Updated"
end
